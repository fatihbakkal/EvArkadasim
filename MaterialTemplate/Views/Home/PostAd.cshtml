
@{
    ViewBag.Title = "PostAd";
    Layout = "~/Views/Shared/UserLayout.cshtml";
}

<script src="http://maps.google.com/maps/api/js?key=AIzaSyByzzYxrIn8wFVg5aOulE0Va22c8PkSRGA&libraries=places&region=tr&language=tr"></script>

@model MaterialTemplate.Models.Advert

<div class="row">
    <form id="formAdvert">
        <div class="col s12 m12 l6">

            <div class="card-panel teal lighten-5">
                <h5 class="purple-text card-header">İlan Tanımlama ve Ücret</h5>
                <div class="row">
                    <div class="input-field col l10 offset-l1 m12 s12">
                        @Html.TextBoxFor(m => m.Advert_Title)
                        @Html.ValidationMessageFor(m => m.Advert_Title, "", new { @class = "errorAdvertForm" })
                        <label for="Advert_Title">Başlık *</label>
                    </div>
                    <div class="input-field col l10 offset-l1 m12 s12">
                        @Html.TextAreaFor(m => m.Advert_Describe, new { @class = "materialize-textarea" })
                        @Html.ValidationMessageFor(m => m.Advert_Describe, "", new { @class = "errorAdvertForm" })
                        <label for="Advert_Describe">Tanım *</label>
                    </div>
                    <div class="input-field col l10 offset-l1 m12 s12">
                        @Html.TextBoxFor(m => m.Advert_Price, new { type = "number" })
                        @Html.ValidationMessageFor(m => m.Advert_Price, "", new { @class = "errorAdvertForm" })
                        <label for="Advert_Price">Kira *</label>
                    </div>
                </div>
            </div>
            <div class="card-panel teal lighten-5">
                <h5 class="purple-text card-header">İlan Kategorisi</h5>
                <div class="row">
                    <div class="input-field col l10 offset-l1 m12 s12">
                        @Html.DropDownListFor(m => m.Advert_Category,
                                new SelectList(ViewBag.Categories, "PropertyID", "Property_Title"), "Seçiniz *")
                        @Html.ValidationMessageFor(m => m.Advert_Category, "", new { @class = "errorAdvertForm" })
                    </div>
                </div>
            </div>
            <div class="card-panel teal lighten-5">
                <h5 class="purple-text card-header">Detaylar</h5>
                <div class="row">
                    <div class="input-field col l5 offset-l1 m12 s12">
                        @Html.TextBoxFor(m => m.Advert_Field, new { type = "number" })
                        @Html.ValidationMessageFor(m => m.Advert_Field, "", new { @class = "errorAdvertForm" })
                        <label for="Advert_Field">Kaç m<sup>2</sup></label>
                    </div>
                    <div class="input-field col l5 m12 s12">
                        @Html.TextBoxFor(m => m.Advert_Bed, new { type = "number" })
                        @Html.ValidationMessageFor(m => m.Advert_Bed, "", new { @class = "errorAdvertForm" })
                        <label for="Advert_Bed">Yatak Sayısı</label>
                    </div>
                    <div class="input-field col l5 offset-l1 m12 s12">
                        @Html.TextBoxFor(m => m.Advert_Bath, new { type = "number" })
                        @Html.ValidationMessageFor(m => m.Advert_Bath, "", new { @class = "errorAdvertForm" })
                        <label for="Advert_Bath">Banyo Sayısı</label>
                    </div>
                    <div class="input-field col l5 m12 s12">
                        @Html.DropDownListFor(m => m.Advert_HeatingType,
                                new SelectList(ViewBag.HeatingTypes, "PropertyID", "Property_Title"), "Isınma Türü *")
                        @Html.ValidationMessageFor(m => m.Advert_HeatingType, "", new { @class = "errorAdvertForm" })

                    </div>
                    <div class="input-field col l10 offset-l1 m12 s12">
                        @Html.TextAreaFor(m => m.Advert_ExtraInformation, new { @class = "materialize-textarea" })
                        @Html.ValidationMessageFor(m => m.Advert_ExtraInformation, "", new { @class = "errorAdvertForm" })
                        <label for="Advert_ExtraInformation">Ekstra Bilgi (Eşya vs.)</label>
                    </div>
                </div>
            </div>

        </div>
        <div class="col s12 m12 l6">

            <div class="card-panel teal lighten-5">
                <h5 class="purple-text card-header">Konum Bilgisi</h5>
                <div class="row">
                    <div class="input-field col l10 offset-l1 m12 s12">
                        @Html.TextAreaFor(m => m.Advert_Address, new { @class = "materialize-textarea" })
                        @Html.ValidationMessageFor(m => m.Advert_Address, "", new { @class = "errorAdvertForm" })
                        <label for="Advert_Address">Adres *</label>
                    </div>
                    <div class="input-field col l10 offset-l1 m12 s12">
                        @Html.DropDownListFor(m => m.ProvinceID,
                                new SelectList(ViewBag.Provinces, "ProvinceID", "Province_Name"), "İl *",
                                new { @class = "validate select-dropdown", @onchange = "GetDistricts()" })
                        @Html.ValidationMessageFor(m => m.ProvinceID, "", new { @class = "errorAdvertForm" })
                    </div>
                    <div class="input-field col l10 offset-l1 m12 s12" id="stateList">
                        @Html.DropDownListFor(m => m.DistrictID,
                               new SelectList(Enumerable.Empty<SelectListItem>(), "DistrictID", "District_Name"), "İlçe *",
                               new { @class = "validate select-dropdown district1" })
                        @Html.ValidationMessageFor(m => m.DistrictID, "", new { @class = "errorAdvertForm" })
                    </div>
                </div>
            </div>
            <div class="card-panel teal lighten-5">
                <h5 class="purple-text card-header">Konum Google Haritalar (Opsiyonel)</h5>
                <div class="row">
                    <div class="input-field col l10 offset-l1 m12 s12">
                        <input type="text" id="addressTextField" />
                    </div>
                    <div class="input-field col l12 m12 s12">
                        <div id="map_canvas" style="height:50%;width:100%;"></div>
                    </div>
                    <div class="input-field col l5 offset-l1 m6 s6">
                        @Html.TextBoxFor(m => m.Advert_Longitude, new { @class = "MapLon", @readonly = "readonly" })
                    </div>
                    <div class="input-field col l5 m6 s6">
                        @Html.TextBoxFor(m => m.Advert_Latitude, new { @class = "MapLat", @readonly = "readonly" })
                    </div>
                </div>
            </div>
        </div>
        <div class="col s12 m12 l12">
            <div class="card-panel teal lighten-5">
                <h5 class="purple-text card-header">İmkanlar</h5>
                <div class="row">
                    @foreach (var item in ViewBag.Features)
                    {
                        <div class="input-field col l3 m6 s12">
                            <input type="checkbox" class="filled-in" id="@item.FeatureID" name="@item.FeatureID" value="@item.FeatureID" />
                            <label style="color:black;" for="@item.FeatureID">@item.Feature_Title</label>
                        </div>
                    }
                </div>
            </div>
        </div>

        <button type="submit" id="btnSave" class="btn waves-effect waves-light col l2 offset-l5 s6 offset-s3 center">Kaydet</button>
    </form>
</div>


<script>
    $(document).ready(function () {
        $('select').material_select();
    });

    function GetDistricts() {
        var provinceId = $('#ProvinceID').val();
        $.ajax({
            url: "@Url.Action("GetDistrictsById", "Home")",
            type: "GET",
            dataType: "JSON",
            data: { province: provinceId },
            success: function (districts) {
                $("#DistrictID").html("");
                $("#DistrictID").append($('<option></option>').html("İlçe *"));
                $.each(districts, function (i, district) {
                    $("#DistrictID").append(
                        $('<option></option>').val(district.DistrictID).html(district.District_Name));
                });
                $("#DistrictID").material_select('update');
            }
        });
    }

    $(document).ready(function () {
        $('#btnSave').on('click', function (e) {
            e.preventDefault();
            $('#btnSave').attr('disabled', true);
            var chkBox = [];
            $('input:checked').each(function () {

                chkBox.push($(this).attr("value"));
            });
            var advert = $('#formAdvert').serialize();

            var data = advert + '&checkBox=' + chkBox.toString();

            $.ajax({
                url: "/Home/CreateAdvert",
                type: "POST",
                data: data,
                dataType: "json",
                success: function (result) {
                    if (result.success == true) {
                        Materialize.toast('İlan başarılı bir şekilde kayıt edildi. <br> Yönlendiriliyorsunuz...', 3800, 'rounded');
                        setTimeout(function () {
                            $(location).attr('href', '@Url.Action("MyAdverts","Home")');
                        }, 4000);
                    }
                    else {
                        Materialize.toast('Lütfen zorunlu alanları doldurunuz.', 3800, 'rounded');
                        $('#btnSave').attr('disabled', false);
                    }
                }
            });
        });
    });
</script>

<style>
    /*#Districts, #Province, #Category, #HeatingType {
        position: relative;
        cursor: pointer;
        background-color: transparent;
        border: none;
        border-bottom: 1px solid #9e9e9e;
        outline: none;
        height: 3rem;
        line-height: 3rem;
        width: 100%;
        font-size: 1rem;
        margin: 0 0 20px 0;
        padding: 0;
        display: block;
    }*/

    /*select > option {
        height: 22px;
        font-size: 16px;
        color: #26a69a;
        line-height: 22px !important;
        padding: 14px 16px;
    }*/

    /*select:focus > option:checked {
        background-color: #26a69a !important;
        color: #eee;
    }

    select > option:hover {
        background-color: red;
    }*/
</style>

<script>
    $(function () {
        var lat = 41.0082376,
            lng = 28.9783588,
            latlng = new google.maps.LatLng(lat, lng),
            image = 'http://www.google.com/intl/en_us/mapfiles/ms/micons/red-dot.png';

        var mapOptions = {
            center: new google.maps.LatLng(lat, lng),
            zoom: 12,
            mapTypeId: google.maps.MapTypeId.ROADMAP,
            panControl: true,
            panControlOptions: {
                position: google.maps.ControlPosition.TOP_RIGHT
            },
            zoomControl: true,
            zoomControlOptions: {
                style: google.maps.ZoomControlStyle.LARGE,
                position: google.maps.ControlPosition.TOP_left
            }
        },
        map = new google.maps.Map(document.getElementById('map_canvas'), mapOptions),
            marker = new google.maps.Marker({
                position: latlng,
                map: map,
                icon: image
            });

        var input = document.getElementById('addressTextField');
        var autocomplete = new google.maps.places.Autocomplete(input, {
            types: ["geocode"]
        });

        autocomplete.bindTo('bounds', map);
        var infowindow = new google.maps.InfoWindow();

        google.maps.event.addListener(autocomplete, 'place_changed', function (event) {
            infowindow.close();
            var place = autocomplete.getPlace();
            if (place.geometry.viewport) {
                map.fitBounds(place.geometry.viewport);
            } else {
                map.setCenter(place.geometry.location);
                map.setZoom(17);
            }

            moveMarker(place.name, place.geometry.location);
            $('.MapLat').val(place.geometry.location.lat());
            $('.MapLon').val(place.geometry.location.lng());
        });
        google.maps.event.addListener(map, 'click', function (event) {
            $('.MapLat').val(event.latLng.lat());
            $('.MapLon').val(event.latLng.lng());
            infowindow.close();
            var geocoder = new google.maps.Geocoder();
            geocoder.geocode({
                "latLng": event.latLng
            }, function (results, status) {
                console.log(results, status);
                if (status == google.maps.GeocoderStatus.OK) {
                    console.log(results);
                    var lat = results[0].geometry.location.lat(),
                        lng = results[0].geometry.location.lng(),
                        placeName = results[0].address_components[0].long_name,
                        latlng = new google.maps.LatLng(lat, lng);

                    moveMarker(placeName, latlng);
                    $("#addressTextField").val(results[0].formatted_address);
                }
            });
        });

        var input = document.getElementById('addressTextField');
        google.maps.event.addDomListener(input, 'keydown', function (e) {
            if (e.keyCode == 13) {
                e.preventDefault();
            }
        });

        function moveMarker(placeName, latlng) {
            marker.setIcon(image);
            marker.setPosition(latlng);
            infowindow.setContent(placeName);
            //infowindow.open(map, marker);
        }
    });
</script>

